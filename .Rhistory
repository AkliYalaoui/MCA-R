summary(data)
acm <- MCA(data)
View(data)
is.na(data)
sum(is.na(data))
sum(is.na(data$Age))
sum(is.na(data$Number))
sum(is.na(data$Gender))
sum(is.na(data$Nationality))
sum(is.na(data$Program))
sum(is.na(data$Course))
sum(is.na(data$English))
for (i in 1:21){
print(sum(is.na(data[,i])))
}
for (i in 1:22){
print(sum(is.na(data[,i])))
}
for (i in 1:21){
print(sum(is.na(data[,i])))
}
for (i in 1:21){
print(sum((data[,i] = "")))
}
for (i in 1:21){
print(sum((data[,i] == "")))
}
for (i in 1:21){
print(sum((data[,i] == "")))
}
data$Age == ""
data$Number == ""
View(data)
for (i in 1:21){
print(sum((data[,i] == "")))
}
data$Number = NULL
mode(data$Academic)
mode(data$Age)
mode(data$Academic)
data <- read.table(file.choose(),sep =",",header = T,na.strings = T)
summary(data)
for (i in 1:21){
print(sum((data[,i] == "")))
}
for (i in 1:21){
print(sum(is.na(data[,i])))
}
data <- read.table(file.choose(),sep =",",header = T,na.string = T)
for (i in 1:21){
print(sum(is.na(data[,i])))
}
library(FactoMineR)
data <- read.table(file.choose(),sep =",",header = T)
summary(data)
for (i in 1:21){
print(sum((data[,i] == "")))
}
for (i in 1:21){
print(sum(is.na(data[,i])))
}
plot(data$Age)
plot(data)
plot(data$Age)
histogramme(data$Age)
histogram(data$Age)
hist(data$Age)
table(data$Age,data$Program)
afc <- CA(tc)
tc <- table(data$Age,data$Program)
afc <- CA(tc)
afc
for (i in 1:21){
print(sum(is.na(data[,i])))
}
for (i in 1:21){
print(sum((data[,i] == "")))
}
for (i in 1:21){
print(sum((data[,i] == "")))
}
summary(data)
unique(data$Academic)
(data$Academic)
unique(data$Academic)
unique(data$Academic)
Mode <- function(u){
tmp <- unique(u)
tmp[which.max(tabulate(match(u,tmp)))]
}
Mode(data$Academic)
match(data$Academic,unique(data$Academic))
tabulate(match(data$Academic,unique(data$Academic)))
which.max(tabulate(match(data$Academic,unique(data$Academic))))
Mode(data$Academic)
data$Academic
data$Academic[data$Academic == ""] = Mode(data$Academic)
data$Academic
summary(data)
data$Number <- NULL
for (i in 1:20){
print(sum(is.na(data[,i])))
}
for (i in 1:20){
print(sum((data[,i] == "")))
}
summary(data)
for (i in 1:20){
data[data[,i] == "",i] = Mode(data[,i])
}
for (i in 1:20){
print(sum((data[,i] == "")))
}
################################## Data visualization
plot(data$Nationality)
################################## Data visualization
plot(table(data$Nationality))
################################## Data visualization
barplot(table(data$Nationality))
################################## Data visualization
unique(data)
################################## Data visualization
unique(data$Nationality)
n <- table(data$Nationality)
barplot(n[order(n, decreasing = TRUE)])
barplot(n[order(n, decreasing = TRUE)],las = 1)
barplot(n[order(n, decreasing = TRUE)])
barplot(n[order(n, decreasing = TRUE)],las = 2)
table(data$Nationality)
hist(n[order(n, decreasing = TRUE)],las = 2)
hist(n)
n <- table(data$Nationality)
barplot(n[order(n, decreasing = TRUE)],las = 2)
Cat_plot(data$Age)
Cat_plot <- function(y){
n <- table(y)
barplot(n[order(n, decreasing = TRUE)],las = 2)
}
Cat_plot(data$Age)
for (i in 1:20){
Cat_plot(data[,i])
}
################################## Data visualization
Cat_plot <- function(y,title){
n <- table(y)
barplot(n[order(n, decreasing = TRUE)],las = 2,main=title)
}
Cat_plot(data$Nationality,"count of each")
Cat_plot(data$Nationality,"frequence of each modality in : Nationality")
Cat_plot <- function(y,title){
n <- table(y)
barplot(n[order(n, decreasing = TRUE)],las = 2,main=title,ylab = "Count",xlab = "Modalities")
}
Cat_plot(data$Nationality,"frequence of each modality in : Nationality")
################################## Data visualization
Cat_plot <- function(y,title){
n <- table(y)
barplot(n[order(n, decreasing = TRUE)],las = 2,main=title,ylab = "Count")
}
Cat_plot(data$Nationality,"frequence of each modality in : Nationality")
Cat_plot <- function(y,title){
n <- table(y)
barplot(n[order(n, decreasing = TRUE)],las = 2,main=title,ylab = "Count")
}
Cat_plot(data$Nationality,"Frequence of each modality in : Nationality")
tab.disjonctif(data)
class(data)
class(data$Age)
levels(data$Age)
levels(data$Age)
unlist(lapply(data,function(x){length(levels(x))}))
for(i in 1: ncol(data)){
data[,i] = as.factor(data[,i])
}
tab.disjonctif(data)
tdc <- tab.disjonctif(data)
View(tdc)
acm <- MCA(data)
(FactoMineR)
(file.choose(),sep =",",header = T)
data <- read.table(file.choose(),sep =",",header = T)
#Check our variables type
summary(data)
NULL
for (i in 1: ncol(data)){
print(sum(is.na(data[,i])))
}
for (i in 1: ncol(data)){
print(sum((data[,i] == "")))
}
Mode <- function(u){
tmp <- unique(u)
tmp[which.max(tabulate(match(u,tmp)))]
}
# substitute empty values with the mode of the variables
for (i in 1: ncol(data)){
data[data[,i] == "",i] <- Mode(data[,i])
}
Cat_plot <- function(y,title){
n <- table(y)
barplot(n[order(n, decreasing = TRUE)],las = 2,main=title,ylab = "Count")
}
Cat_plot(data$Nationality,"Frequence of each modality in : Nationality")
for(i in 1: ncol(data)){
data[,i] <- as.factor(data[,i])
}
tdc <- tab.disjonctif(data)
acm <- MCA(data)
tc <- table(data$Age,data$Program)
afc <- CA(tc)
acm <- MCA(tdc)
levels(data$Age)
mj <- unlist(lapply(data,function(x){length(levels(x))}))
mj
mj
apply(tdc,2,sum)
ns <- apply(tdc,2,sum)
fs <- ns / nrow(tdc)
fs
View(tdc)
data$Number <- NULL
for (i in 1: ncol(data)){
data[data[,i] == "",i] <- Mode(data[,i])
}
for(i in 1: ncol(data)){
data[,i] <- as.factor(data[,i])
}
# make the complete disjunctive table
tdc <- tab.disjonctif(data)
ns <- apply(tdc,2,sum)
fs <- ns / nrow(tdc)
fs
library(FactoMineR)
data <- read.table(file.choose(),sep =",",header = T)
#Check our variables type
summary(data)
# this is just an index, we remove it
data$Number <- NULL
for (i in 1: ncol(data)){
print(sum(is.na(data[,i])))
}
for (i in 1: ncol(data)){
print(sum((data[,i] == "")))
}
Mode <- function(u){
tmp <- unique(u)
tmp[which.max(tabulate(match(u,tmp)))]
}
# substitute empty values with the mode of the variables
for (i in 1: ncol(data)){
data[data[,i] == "",i] <- Mode(data[,i])
}
Cat_plot <- function(y,title){
n <- table(y)
barplot(n[order(n, decreasing = TRUE)],las = 2,main=title,ylab = "Count")
}
Cat_plot(data$Nationality,"Frequence of each modality in : Nationality")
for(i in 1: ncol(data)){
data[,i] <- as.factor(data[,i])
}
# make the complete disjunctive table
tdc <- tab.disjonctif(data)
View(tdc)
ns <- apply(tdc,2,sum)
fs <- ns / nrow(tdc)
fs
data$Nationality <- NULL
data$Nationality <- NULL
for(i in 1: ncol(data)){
data[,i] <- as.factor(data[,i])
}
# make the complete disjunctive table
tdc <- tab.disjonctif(data)
Cat_plot(data$Course,"Frequence of each modality in : Course")
Cat_plot(data$Program,"Frequence of each modality in : Course")
Cat_plot(data$English,"Frequence of each modality in : Course")
Cat_plot(data$Attendance,"Frequence of each modality in : Course")
Cat_plot(data$Academic,"Frequence of each modality in : Course")
Cat_plot(data$Age,"Frequence of each modality in : Course")
Cat_plot(data$Nationality,"Frequence of each modality in : Nationality")
Cat_plot(data$Age,"Frequence of each modality in : Nationality")
ns <- apply(tdc,2,sum)
fs <- ns / nrow(tdc)
fs
# apply mca to data
acm <- MCA(data)
(file.choose(),sep =",",header = T)
data <- read.table(file.choose(),sep =",",header = T)
#Check our variables type
summary(data)
# this is just an index, we remove it
data$Number <- NULL
print(sum(is.na(data[,i])))
}
for (i in 1: ncol(data)){
print(sum(is.na(data[,i])))
}
for (i in 1: ncol(data)){
print(sum((data[,i] == "")))
}
Mode <- function(u){
tmp <- unique(u)
tmp[which.max(tabulate(match(u,tmp)))]
}
# substitute empty values with the mode of the variables
for (i in 1: ncol(data)){
data[data[,i] == "",i] <- Mode(data[,i])
}
Cat_plot <- function(y,title){
n <- table(y)
barplot(n[order(n, decreasing = TRUE)],las = 2,main=title,ylab = "Count")
}
Cat_plot(data$Nationality,"Frequence of each modality in : Nationality")
for(i in 1: ncol(data)){
data[,i] <- as.factor(data[,i])
}
# make the complete disjunctive table
tdc <- tab.disjonctif(data)
ns <- apply(tdc,2,sum)
fs <- ns / nrow(tdc)
fs
# apply mca to data
acm <- MCA(data)
as.data.frame(fs)
fs
fs[0]
fs[0]
fs[0,]
fs[,0]
c(fs)
table(fs)
plot(table(fs))
fs
list(fs)
list(fs)
matrix(fs)
fs[0]
fs[0][0]
acm
# eigen values
acm$eig
# eigen values
head(acm$eig)
plot(acm$eig[,1],acm$eig[,2])
barplot(acm$eig[,1],acm$eig[,2])
hist(acm$eig[,1],acm$eig[,2])
barplot(acm$eig[,1],acm$eig[,2])
# absolute contribution
acm
# absolute contribution
acm$var$contrib
# quality of representation of variables
acm$var$cos2
# quality of representation of variables
acm$var$cos2[acm$var$cos2[,1] + acm$var$cos2[,2] > 0.5]
# quality of representation of variables
acm$var$cos2[acm$var$cos2[,2] + acm$var$cos2[,3] > 0.5]
# quality of representation of variables
acm$var$cos2[,1]
# quality of representation of variables
acm$var$cos2
# quality of representation of variables
acm$var$cos2$dim1
# quality of representation of variables
acm$var$cos2[1]
tc <- table(data$Course,data$Attendance)
afc <- CA(tc)
tc <- table(data$Age,data$Gender)
afc <- CA(tc)
tc <- table(data$Age,data$Gender)
afc <- CA(tc)
afc <- CA(tc)
tc <- table(data$Age,data$Gender)
afc <- CA(tc)
knitr::opts_chunk$set(echo = TRUE)
library(FactoMineR)
# Import our data
data <- read.table(file.choose(),sep =",",header = T)
#Check our variables type
summary(data)
#Check our variables type
summary(data)
for (i in 1: ncol(data)){
print(sum(is.na(data[,i])))
}
for (i in 1: ncol(data)){
print(sum((data[,i] == "")))
}
Cat_plot <- function(y,title){
n <- table(y)
barplot(n[order(n, decreasing = TRUE)],las = 2,main=title,ylab = "Count")
}
Cat_plot(data$parental.level.of.education,"parental.level.of.education")
Cat_plot <- function(y){
Cat_plot <- function(y){
n <- table(y)
barplot(n[order(n, decreasing = TRUE)],las = 2)
}
Cat_plot(data$parental.level.of.education)
Cat_plot(data$parental.level.of.education)
for(i in 1: ncol(data)){
data[,i] <- as.factor(data[,i])
}
# make the complete disjunctive table
tdc <- tab.disjonctif(data)
View(tdc)
Cat_plot <- function(y){
n <- table(y)
barplot(n[order(n, decreasing = TRUE)],las = 2)
}
Cat_plot(data$parental.level.of.education)
library(FactoMineR)
# Import our data
data <- read.table(file.choose(),sep =",",header = T)
# check for NA values
for (i in 1: ncol(data)){
print(sum(is.na(data[,i])))
}
# Check for empty values
for (i in 1: ncol(data)){
print(sum((data[,i] == "")))
}
Cat_plot <- function(y){
n <- table(y)
barplot(n[order(n, decreasing = TRUE)],las = 2)
}
Cat_plot(data$parental.level.of.education)
# transform variables to factors
for(i in 1: ncol(data)){
data[,i] <- as.factor(data[,i])
}
# make the complete disjunctive table
tdc <- tab.disjonctif(data)
View(tdc)
library(FactoMineR)
# Import our data
data <- read.table(file.choose(),sep =",",header = T)
#Check our variables type
summary(data)
# this is just an index, we remove it
data$Number <- NULL
# check for NA values
for (i in 1: ncol(data)){
print(sum(is.na(data[,i])))
}
# Check for empty values
for (i in 1: ncol(data)){
print(sum((data[,i] == "")))
}
library(FactoMineR)
# Import our data
data <- read.table(file.choose(),sep =",",header = T)
#Check our variables type
summary(data)
# this is just an index, we remove it
data$Number <- NULL
# check for NA values
for (i in 1: ncol(data)){
print(sum(is.na(data[,i])))
}
# Check for empty values
for (i in 1: ncol(data)){
print(sum((data[,i] == "")))
}
# This function returns the mode of the categorical variable
Mode <- function(u){
tmp <- unique(u)
tmp[which.max(tabulate(match(u,tmp)))]
}
# substitute empty values with the mode of the variables
for (i in 1: ncol(data)){
data[data[,i] == "",i] <- Mode(data[,i])
}
Cat_plot <- function(y,title){
n <- table(y)
barplot(n[order(n, decreasing = TRUE)],las = 2,main=title,ylab = "Count")
}
Cat_plot(data$Nationality,"Frequence of each modality in : Nationality")
#The majority (77) of the students surveyed were Chinese
#followed by Saudi Arabia, and Korea at 6
#The majority of the countries either had 2 or 1 student surveyed.
# transform variables to factors
for(i in 1: ncol(data)){
data[,i] <- as.factor(data[,i])
}
# make the complete disjunctive table
tdc <- tab.disjonctif(data)
head(tdc)
# transform variables to factors
for(i in 1: ncol(data)){
data[,i] <- as.factor(data[,i])
}
# make the complete disjunctive table
tdc <- tab.disjonctif(data)
# apply mca to data
acm <- MCA(data)
# eigen values
head(acm$eig)
barplot(acm$eig[,1],acm$eig[,2])
# absolute contribution
head(acm$var$contrib)
# quality of representation of variables
head(acm$var$cos2)
########################################### AFC
tc <- table(data$Age,data$Gender)
tc
afc <- CA(tc)
afc
afc <- CA(tc)
afc <- CA(tc)
afc <- CA(tc)
View(data)
